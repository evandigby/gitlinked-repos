@inject IJSRuntime JsRuntime
@inject IState state

<div class="githubcard">
	<div class="githubcard-contents">
		<div class="githubcard-header">
			<img src="/img/GitHub-Mark-64px.png" />
			<span>Selected Code Repositories</span>
		</div>

		<div class="login-or-repos">
			@if (state.IsAuthenticated)
			{
				<Repos />
			}
			else
			{
				<Button OnClick=LoginClick>Log in to Add Selected Repositories</Button>
			}
		</div>
	</div>
</div>

@code {
	protected override void OnInitialized()
	{
		base.OnInitialized();

		state.OnChange += StateHasChanged;
	}
	private async Task LoginClick(MouseEventArgs args)
	{
		var dotNetObjectReference = DotNetObjectReference.Create(this);

		await JsRuntime.InvokeVoidAsync("InteropFunctions.OpenAuthWindow", dotNetObjectReference);
	}

	[JSInvokable("Authenticated")]
	public Task Authenticated(bool isAuthenticated)
	{
		state.IsAuthenticated = isAuthenticated;
		state.RepositoriesStale = true;
		state.NotifyStateChanged();
		return Task.CompletedTask;
	}
}
